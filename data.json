{"id":70,"name":"Trigger","displayName":"QuickBooks","documentation":"","moduleName":"trigger.quickbooks","serviceTypes":[{"name":"TaxAgencyService","description":"Triggers when a new event related to Quickbooks TaxAgency is received.\nAvailable actions: onTaxagencyCreate and onTaxagencyUpdate.\n","functions":[{"isRemote":true,"documentation":"","name":"onTaxagencyCreate","parameters":[{"name":"event","typeName":"record","optional":false,"typeInfo":{"name":"QuickBookEvent","orgName":"ballerinax","moduleName":"trigger.quickbooks","version":"1.1.1"},"displayAnnotation":{},"hasRestType":true,"defaultable":false,"fields":[{"name":"lastUpdated","typeName":"string","optional":true,"defaultable":false},{"name":"name","typeName":"string","optional":true,"defaultable":false},{"name":"deletedID","typeName":"string","optional":true,"defaultable":false},{"name":"id","typeName":"string","optional":true,"defaultable":false},{"name":"operation","typeName":"string","optional":true,"defaultable":false}],"restType":{"typeName":"anydata","optional":false,"defaultable":false}}],"returnType":{"typeName":"error","optional":true,"displayAnnotation":{},"defaultable":false},"displayAnnotation":{}},{"isRemote":true,"documentation":"","name":"onTaxagencyUpdate","parameters":[{"name":"event","typeName":"record","optional":false,"typeInfo":{"name":"QuickBookEvent","orgName":"ballerinax","moduleName":"trigger.quickbooks","version":"1.1.1"},"displayAnnotation":{},"hasRestType":true,"defaultable":false,"fields":[{"name":"lastUpdated","typeName":"string","optional":true,"defaultable":false},{"name":"name","typeName":"string","optional":true,"defaultable":false},{"name":"deletedID","typeName":"string","optional":true,"defaultable":false},{"name":"id","typeName":"string","optional":true,"defaultable":false},{"name":"operation","typeName":"string","optional":true,"defaultable":false}],"restType":{"typeName":"anydata","optional":false,"defaultable":false}}],"returnType":{"typeName":"error","optional":true,"displayAnnotation":{},"defaultable":false},"displayAnnotation":{}}],"displayAnnotation":{}}],"listenerParams":[{"name":"listenerConfig","typeName":"record","optional":false,"typeInfo":{"name":"ListenerConfig","orgName":"ballerinax","moduleName":"trigger.quickbooks","version":"1.1.1"},"displayAnnotation":{},"hasRestType":true,"defaultable":false,"fields":[{"name":"verificationToken","typeName":"string","optional":false,"defaultable":false},{"memberType":{"typeName":"string","optional":false,"defaultable":false},"name":"realmIds","typeName":"array","optional":false,"defaultable":false}],"restType":{"typeName":"anydata","optional":false,"defaultable":false}},{"name":"listenOn","typeName":"union","optional":false,"defaultValue":"8090","displayAnnotation":{},"defaultable":true,"members":[{"typeName":"int","optional":false,"defaultable":false},{"fields":[],"name":"Listener","typeName":"object","optional":false,"typeInfo":{"name":"Listener","orgName":"ballerina","moduleName":"http","version":"2.4.5"},"defaultable":false}]}],"listenerProtocol":"http","displayAnnotation":{"label":"QuickBooks","iconPath":"docs/icon.png"},"package":{"organization":"ballerinax","name":"trigger.quickbooks","version":"1.1.1","platform":"any","languageSpecificationVersion":"2022R3","isDeprecated":false,"deprecateMessage":"","URL":"/ballerinax/trigger.quickbooks/1.1.1","balaVersion":"2.0.0","balaURL":"https://fileserver.central.ballerina.io/2.0/ballerinax/trigger.quickbooks/1.1.1/ballerinax-trigger.quickbooks-any-1.1.1.bala?md5=iMnYVhAqA217gNhdiWFm_Q&expires=1681820482","digest":"sha-256=a0d57998306839b9869a1f7719e474c7ed952e13d2e63b5962cfa2a33eed3950","summary":"Listen to [QuickBooks Webhook API](https://developer.intuit.com/app/developer/qbo/docs/develop/webhooks) from Ballerina","readme":"Listen to [QuickBooks Webhook API](https://developer.intuit.com/app/developer/qbo/docs/develop/webhooks) from Ballerina\n\n## Package overview\nThe `ballerinax/trigger.quickbooks` is a [Ballerina](https://ballerina.io/) trigger for QuickBooks.\nThis package allows you to listen to events in QuickBooks.\n\n### Compatibility\n|                               | Version                        |\n|-------------------------------|--------------------------------|\n| Ballerina Language            | Ballerina Swan Lake 2201.1.1   |\n\n## Report issues\nTo report bugs, request new features, start new discussions, view project boards, etc., go to the [Ballerina AsyncAPI Triggers repository](https://github.com/ballerina-platform/asyncapi-triggers).\n\n## Useful links\n- Discuss code changes of the Ballerina project in [ballerina-dev@googlegroups.com](mailto:ballerina-dev@googlegroups.com).\n- Chat live with us via our [Slack channel](https://ballerina.io/community/slack/).\n- Post all technical questions on Stack Overflow with the [#ballerina](https://stackoverflow.com/questions/tagged/ballerina) tag","template":false,"licenses":["Apache-2.0"],"authors":["Ballerina"],"sourceCodeLocation":"https://github.com/ballerina-platform/asyncapi-triggers","keywords":["Finance/Accounting","Cost/Paid","Trigger"],"ballerinaVersion":"2201.2.3","icon":"https://bcentral-packageicons.azureedge.net/images/ballerinax_trigger.quickbooks_1.1.1.png","ownerUUID":"9712bf21-e852-48ba-83f0-2c7c5262cb6d","createdDate":1669720863000,"pullCount":4,"visibility":"public","modules":[{"packageURL":"/ballerinax/trigger.quickbooks/1.1.1","apiDocURL":"https://lib.ballerina.io/ballerinax/trigger.quickbooks/1.1.1","name":"trigger.quickbooks","summary":"The QuickBooks trigger allows you to listen to [QuickBooks webhook notifications](https://developer.intuit.com/app/developer/qbo/docs/develop/webhooks).","readme":"## Overview\nThe QuickBooks trigger allows you to listen to [QuickBooks webhook notifications](https://developer.intuit.com/app/developer/qbo/docs/develop/webhooks).\n\nAfter you subscribe for webhooks to receive event-triggered callbacks for entities that your application must listen to. QuickBooks webhooks automatically notify you whenever data changes in your end userâ€™s QuickBooks Online company files.\n\n## Prerequisites\nBefore using this trigger in your Ballerina application, complete the following:\n\n* Create a [QuickBooks](https://quickbooks.intuit.com/) account.\n* Add listener endpoint URL to QuickBooks webhooks.\n* [Optional] Select and Save Entities and their events.\n\n## Quickstart\nTo use the QuickBooks trigger in your Ballerina application, update the .bal file as follows:\n\n### Step 1: Import the trigger\nFirst, import `ballerinax/trigger.quickbooks` module into the Ballerina project as follows.\n```ballerina\n    import ballerinax/trigger.quickbooks;\n```\n\n### Step 2: Create a new trigger instance\nInitialize the trigger by providing the app-specific verifier token (to validate the webhook notifications from the callback are from Intuit) and QuickBooks company IDs in the listener config and the port number where your trigger will be running. You can also pass an http:Listerner instance instead of the port number with the listener config. The app-specific verifier token is shown under webhooks section of your QuickBooks app after registering an endpoint URL. The QuickBooks companyId is shown in your app under the company list.\n```ballerina\n    listener quickbooks:Listener quickBooksListener = new (\n        listenerConfig = {\n            verificationToken: \"<VERIFIER_TOKEN>\",\n            realmIds: [\"<COMPANY_ID_01>\", \"<COMPANY_ID_02>\"]\n        }, \n        listenOn = <PORT>\n    );\n```\n\nIf you don't provide a port it will use the default port which is 8090.\n\n### Step 3: Run the trigger service\n1. Implement a service using the correct service type for the relevant event channel (e.g., `quickbooks:CustomerService`). \n\n    The following is a sample service that listens to QuickBooks Customer events via the QuickBooks trigger:\n\n    ```ballerina\n        service quickbooks:CustomerService on quickBooksListener {\n            remote function onCustomerCreate(quickbooks:QuickBookEvent event) returns error? {\n                // YOUR LOGIC ON THE EVENT\n            }\n            remote function onCustomerUpdate(quickbooks:QuickBookEvent event) returns error? {}\n            remote function onCustomerDelete(quickbooks:QuickBookEvent event) returns error? {}\n            remote function onCustomerMerge(quickbooks:QuickBookEvent event) returns error? {}\n        }\n    ```\n\n2. To compile and run the Ballerina program, issue the following command: `bal run`\n\n### Step 4: Subscribe to a webhook topic with the URL of the service\nFor instructions to subscribe to a webhook topic with the URL of the service, see [Intuit Developer Documentation - Webhooks](https://developer.intuit.com/app/developer/qbo/docs/develop/webhooks).\n\n> **Note**: \n> - Locally, you can use [ngrok](https://ngrok.com/docs) to expose your web service to the internet and to obtain a public URL (For example: 'https://7745640c2478.ngrok.io'). \n> - In Choreo, you can obtain this service URL from the `Invoke URL` section of the `Configure and Deploy` form under `Deploy` view before App deployment.\n> - Add a trailing `/` to the end of public URL if it's not present. "}]},"triggerType":"quickbooks","httpBased":true}